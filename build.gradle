/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
}

ext {
    cucumberVersion = '5.7.0'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo1.maven.org/maven2')
    }
}

dependencies {
    implementation 'org.junit.platform:junit-platform-runner:1.5.2'
    implementation 'org.junit.jupiter:junit-jupiter-engine:5.8.0-M1'
    implementation 'io.cucumber:cucumber-java:5.7.0'
    implementation 'io.cucumber:cucumber-junit:5.7.0'
    implementation 'io.cucumber:cucumber-junit-platform-engine:5.7.0'
    implementation 'org.seleniumhq.selenium:selenium-java:3.14.0'
    implementation 'org.apache.commons:commons-lang3:3.11'
    implementation 'org.assertj:assertj-core:3.19.0'
    implementation 'org.apache.logging.log4j:log4j-api:2.14.1'
    implementation 'log4j:log4j:1.2.17'
    implementation 'com.epam.reportportal:agent-java-cucumber5:5.0.1'
    testImplementation 'com.codeborne:selenide:5.25.0'
}

group = 'mavenProj'
version = '1.0-SNAPSHOT'
description = 'mavenProj'
sourceCompatibility = '8'

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

task cucumberTask() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            ignoreExitValue = true
            main = "io.cucumber.core.cli.Main"
            classpath = sourceSets.main.runtimeClasspath + sourceSets.main.output + sourceSets.test.output
            def tags = getProperty("tags")
            def threads = getProperty("threads")
            args = [
                    '--plugin', 'pretty',
                    '--plugin', 'html:target/cucumber-report.html',
                    '--tags', tags,
                    '--glue', 'stepDefs', 'src/test/resources',
                    '--threads', threads
            ]
        }
    }
}

test {
    exclude '**/TestRunner*'
//    maxParallelForks(2)
}
